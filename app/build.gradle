plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id "androidx.navigation.safeargs.kotlin"
    id "dagger.hilt.android.plugin"
}
android {
    compileSdk compileSDKVersion

    defaultConfig {
        applicationId "com.anonymous.reviews"
        minSdk minSDKVersion
        targetSdk targetSDKVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    testOptions {
        unitTests.includeAndroidResources = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    configurations.all {
        resolutionStrategy {
            force 'androidx.test:monitor:1.4.0'
        }
    }
}

dependencies {
    // Default dependencies
    implementation "androidx.core:core-ktx:$androidCoreVersion"
    implementation "androidx.appcompat:appcompat: $appCompatVersion"
    implementation "com.google.android.material:material:$materialDesignVersion"
    implementation "androidx.constraintlayout:constraintlayout:$contraintLayoutVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationFragmentVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationUIVersion"
    // Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:$navigationFragmentVersion")

    // Test Modules
    testImplementation "junit:junit:$junit4Version"
    androidTestImplementation "androidx.test.ext:junit:$junitExtVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCoreVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation("androidx.test:runner:$testRunnerRulesVersion")
    androidTestImplementation("androidx.test:rules:$testRunnerRulesVersion")
    testImplementation('androidx.test:core:1.4.0')

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesTestVersion"

    // Coroutines test framework
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesTestVersion"
    androidTestImplementation("androidx.navigation:navigation-testing:$navigationVersion")
    // To launch fragment in isoloation
    debugImplementation("androidx.fragment:fragment-testing:$fragmentTestVersion")

    // Fragment
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    implementation "androidx.fragment:fragment:$fragmentVersion"

    // Lifecycle + ViewModel & LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycleVersion")

    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation("androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion")

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // Dependency injection related
    implementation("com.google.dagger:hilt-android:2.38.1")
    kapt("com.google.dagger:hilt-android-compiler:2.38.1")
}

repositories {
    mavenCentral()
}